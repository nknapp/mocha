#!/usr/bin/env node

'use strict';

/**
 * This wrapper executable checks for known node flags and appends them when found, before invoking the "real" _mocha(1) executable.
 *
 * @module bin/mocha
 * @private
 */

const {spawn} = require('child_process');
const {loadOptions} = require('../lib/cli/options');
const debug = require('debug')('mocha:cli:mocha');
const {unparse} = require('../lib/cli/unparser');
const opts = loadOptions(process.argv.slice(2));
const executablePath = require.resolve('../lib/cli/cli');
debug('loaded opts', opts);

const {nodeArgs, mochaArgs} = unparse(opts);
const args = nodeArgs.concat(executablePath, mochaArgs);

debug(`exec ${process.execPath} w/ args:`, args);

const proc = spawn(process.execPath, args, {
  stdio: 'inherit'
});

proc.on('exit', (code, signal) => {
  process.on('exit', () => {
    if (signal) {
      process.kill(process.pid, signal);
    } else {
      process.exit(code);
    }
  });
});

// terminate children.
process.on('SIGINT', () => {
  proc.kill('SIGINT'); // calls runner.abort()
  proc.kill('SIGTERM'); // if that didn't work, we're probably in an infinite loop, so make it die.
});
